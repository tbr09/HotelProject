@**@@model HotelProject.Models.MapViewModel
@*@model HotelProject.Models.Travel*@
@*@model IEnumerable<HotelProject.Models.Travel>*@

@{
    ViewBag.Title = "Index";
}
<h2>Map</h2>

<button class="btn btn-default" id="dropAttractions" onclick="dropAttractions()">Drop Attractions</button>
<button class="btn btn-default" id="dropHotels" onclick="dropHotels()">Drop Hotels</button>
<button class="btn btn-default" id="clearMarkers" onclick="clearMarkers()">Clear Markers</button>
<button class="btn btn-default" id="dropPaths" onclick="dropPaths()">Paths</button>
<button class="btn btn-default" id="clearPaths" onclick="clearPaths()">Clear Paths</button>
<button class="btn btn-default" id="dropTour" onclick="dropTour()">Drop Tour</button>
<button class="btn btn-default" id="dropTourPaths" onclick="dropTourPaths()">Drop Tour Paths</button>
<hr />
<div id="map" style="width: 1100px; height: 600px;"></div>

<script>

    var map;
    function initMap() {
        var startCenter = { lat: 53.388097, lng: 21.435653 };
        map = new google.maps.Map(document.getElementById('map'), {
            zoom: 8,
            center: startCenter,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        });
    }

    var attractions = @Html.Raw(Json.Encode(Model.attractions));
    var hotels = @Html.Raw(Json.Encode(Model.hotels));
    var tour = @Html.Raw(Json.Encode(Model.tour));

    //timeout add markers
    var markers = [];
    var paths = [];
    var infoWindows = [];

    function dropAttractions() {
        for (var i = 0; i < attractions.length; i++) {
            addMarkerWithTimeout(attractions[i], i * 3, "attraction");

        }
    }
    function dropTourPaths() {
        var i = 0;
        for (var j = 0; j < tour.length; j++) {
            for (; i < tour[j].attractionList.length+1; i++) {
                update(i, i + 1);
            };
            //i++;
        }

        //var i = 0;
        //for (; i < tour[0].attractionList.length + 1; i++) {
        //    update(i, i + 1);
        //};

        //for (; i < tour[1].attractionList.length + 1; i++) {
        //    update(i, i + 1);
        //};
        //for (var i = 0; i < tour.attractionList.length + 1; i++) {
        //   update(i, i + 1);
        //};
    }

    function dropTour() {
        clearMarkers();
        for (var j = 0; j < tour.length; j++)
        {
            addMarkerWithTimeout(tour[j].sourceHotel, 100, "hotel");
            for (var i = 0; i < tour[j].attractionList.length; i++) {
                addMarkerWithTimeout(tour[j].attractionList[i], 100, "attraction");
            }
            addMarkerWithTimeout(tour[j].destinationHotel, 100, "hotel");
        }
        //addMarkerWithTimeout(tour.sourceHotel,100, "hotel");
        //for (var i = 0; i < tour.attractionList.length; i++) {
        //    addMarkerWithTimeout(tour.attractionList[i],100,"attraction");
        //}
        //addMarkerWithTimeout(tour.destinationHotel, 100, "hotel");
    }
    function dropPaths() {
        for (var i = 0; i < tour.attractionList.length - 1; i++) {
            update(i,i+1);
        };
    }

    function dropHotels() {
        for (var i = 0; i < hotels.length; i++) {
            if(hotels[i].rating!=0) addMarkerWithTimeout(hotels[i], i * 3, "hotel");
        }
    }

    function addMarkerWithTimeout(x, timeout, choose) {
        window.setTimeout(function() {
            var myPos = { lat: x.geometry.location.lat, lng: x.geometry.location.lng };
            var marker;
            if (choose == "hotel")
            {
                marker = new google.maps.Marker({
                    position: myPos,
                    map: map,
                    icon:'http://maps.google.com/mapfiles/ms/icons/yellow-dot.png',
                    animation: google.maps.Animation.DROP,
                });
            }
            else
            {
                marker = new google.maps.Marker({
                    position: myPos,
                    map: map,
                    icon: 'http://maps.google.com/mapfiles/ms/icons/red-dot.png',
                    animation: google.maps.Animation.DROP
                });
            }


            var infowindow = new google.maps.InfoWindow({
                content: 'Name: ' + x.name + '<hr/>Rating:' + x.rating
            });
            marker.addListener('click', function () {
                infowindow.open(map, marker);
            });

            markers.push(marker);
        }, timeout);
    }

    function clearMarkers() {
        for (var i = 0; i < markers.length; i++) {
            markers[i].setMap(null);
        }
        markers = [];
    }

    function update(x, y) {
        poly = new google.maps.Polyline({
            strokeColor: '#FF0000',
            strokeOpacity: 1.0,
            strokeWeight: 3,
            map: map,
        });
        var path = [markers[x].getPosition(), markers[y].getPosition()];
        poly.setPath(path);
    }

    function clearPaths() {

        path.setMap(null);
    }

    //standard add markers
    /*
    function addMarker(i)
    {
        var x = attractions[i];
        var myPos = { lat: x.geometry.location.lat, lng: x.geometry.location.lng };
        var marker = new google.maps.Marker({
            position: myPos,
            map: map,
            title: 'ggg',
            animation: google.maps.Animation.DROP
        });
        google.maps.event.addListener(marker, 'click', (function (marker, i) {
            return function () {
                infowindow.setContent(locations[i][0]);
                infowindow.open(map, marker);
            }
        })(marker, i));
    }
    for (var i = 0; i < attractions.length; i++) {
        addMarker(i)
    }
    */

</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDNItEncriDb-V4vc94EwQlrcq3orKJGjU&callback=initMap">
</script>